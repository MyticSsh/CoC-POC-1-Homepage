# 개발 환경용 Docker Compose 설정
# 개발 시 사용할 수 있는 추가 서비스들과 설정

version: '3.8'

services:
  # 개발용 Next.js 서비스 (핫 리로드 지원)
  web-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: coc-website-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - CUSTOM_KEY=${CUSTOM_KEY}
    env_file:
      - .env.local
    volumes:
      # 소스 코드 마운트 (핫 리로드용)
      - .:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    networks:
      - coc-network
    command: npm run dev

  # 개발용 데이터베이스
  db-dev:
    image: postgres:15-alpine
    container_name: coc-postgres-dev
    environment:
      POSTGRES_DB: coc_website_dev
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    networks:
      - coc-network

  # pgAdmin (데이터베이스 관리 도구)
  pgadmin:
    image: dpage/pgadmin4
    container_name: coc-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@codeofcreation.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db-dev
    restart: unless-stopped
    networks:
      - coc-network

networks:
  coc-network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
